version: '3.8'
services:
  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Override the localhost configs for Docker network
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/elguindyDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      # MinIO configuration that overrides application.properties
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_PUBLICURL=http://localhost:9000
      - MINIO_ACCESSKEY=minioadmin
      - MINIO_SECRETKEY=minioadmin
      - MINIO_BUCKETNAME=elguindy
      - MINIO_ENABLED=true
      # AWS S3 config overrides
      - AWS_S3_PUBLIC_URL=http://localhost:9000
      - AWS_S3_ENABLED=true
      - STORAGE_TYPE=minio
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000
    depends_on:
      - postgres
      - minio
      - minio-setup

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: elguindyDB
    volumes:
      - elguindy_pg_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio-guindy
    ports:
      - "9000:9000"  # Changed back to 9000 to match your app.properties
      - "9001:9001"  # Changed back to 9001
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data_local:/data
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-setup:
    image: minio/mc:latest
    container_name: minio-setup-guindy
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Setting up MinIO...';
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/elguindy --ignore-existing;
      /usr/bin/mc anonymous set public myminio/elguindy;
      echo 'âœ… MinIO bucket created with public access!';
      "
    restart: "no"

volumes:
  elguindy_pg_data:
  minio_data_local: